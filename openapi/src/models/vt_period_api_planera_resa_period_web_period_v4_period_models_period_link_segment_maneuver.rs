/*
 * Planera Resa
 *
 * Sök och planera resor med Västtrafik
 *
 * The version of the OpenAPI document: v4
 * 
 * Generated by: https://openapi-generator.tech
 */

/// LinkSegmentManeuver : Specifies a maneuver to be executed for a link segment.

/// Specifies a maneuver to be executed for a link segment.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LinkSegmentManeuver {
    #[serde(rename = "none")]
    None,
    #[serde(rename = "from")]
    From,
    #[serde(rename = "to")]
    To,
    #[serde(rename = "on")]
    On,
    #[serde(rename = "left")]
    Left,
    #[serde(rename = "right")]
    Right,
    #[serde(rename = "keepleft")]
    Keepleft,
    #[serde(rename = "keepright")]
    Keepright,
    #[serde(rename = "halfleft")]
    Halfleft,
    #[serde(rename = "halfright")]
    Halfright,
    #[serde(rename = "keephalfleft")]
    Keephalfleft,
    #[serde(rename = "keephalfright")]
    Keephalfright,
    #[serde(rename = "sharpleft")]
    Sharpleft,
    #[serde(rename = "sharpright")]
    Sharpright,
    #[serde(rename = "keepsharpleft")]
    Keepsharpleft,
    #[serde(rename = "keepsharpright")]
    Keepsharpright,
    #[serde(rename = "straight")]
    Straight,
    #[serde(rename = "uturn")]
    Uturn,
    #[serde(rename = "enter")]
    Enter,
    #[serde(rename = "leave")]
    Leave,
    #[serde(rename = "enterroundabout")]
    Enterroundabout,
    #[serde(rename = "stayinroundabout")]
    Stayinroundabout,
    #[serde(rename = "leaveroundabout")]
    Leaveroundabout,
    #[serde(rename = "enterferry")]
    Enterferry,
    #[serde(rename = "leaveferry")]
    Leaveferry,
    #[serde(rename = "changehighway")]
    Changehighway,
    #[serde(rename = "checkinferry")]
    Checkinferry,
    #[serde(rename = "checkoutferry")]
    Checkoutferry,
    #[serde(rename = "elevator")]
    Elevator,
    #[serde(rename = "elevatordown")]
    Elevatordown,
    #[serde(rename = "elevatorup")]
    Elevatorup,
    #[serde(rename = "escalator")]
    Escalator,
    #[serde(rename = "escalatordown")]
    Escalatordown,
    #[serde(rename = "escalatorup")]
    Escalatorup,
    #[serde(rename = "stairs")]
    Stairs,
    #[serde(rename = "stairsdown")]
    Stairsdown,
    #[serde(rename = "stairsup")]
    Stairsup,

}

impl ToString for LinkSegmentManeuver {
    fn to_string(&self) -> String {
        match self {
            Self::None => String::from("none"),
            Self::From => String::from("from"),
            Self::To => String::from("to"),
            Self::On => String::from("on"),
            Self::Left => String::from("left"),
            Self::Right => String::from("right"),
            Self::Keepleft => String::from("keepleft"),
            Self::Keepright => String::from("keepright"),
            Self::Halfleft => String::from("halfleft"),
            Self::Halfright => String::from("halfright"),
            Self::Keephalfleft => String::from("keephalfleft"),
            Self::Keephalfright => String::from("keephalfright"),
            Self::Sharpleft => String::from("sharpleft"),
            Self::Sharpright => String::from("sharpright"),
            Self::Keepsharpleft => String::from("keepsharpleft"),
            Self::Keepsharpright => String::from("keepsharpright"),
            Self::Straight => String::from("straight"),
            Self::Uturn => String::from("uturn"),
            Self::Enter => String::from("enter"),
            Self::Leave => String::from("leave"),
            Self::Enterroundabout => String::from("enterroundabout"),
            Self::Stayinroundabout => String::from("stayinroundabout"),
            Self::Leaveroundabout => String::from("leaveroundabout"),
            Self::Enterferry => String::from("enterferry"),
            Self::Leaveferry => String::from("leaveferry"),
            Self::Changehighway => String::from("changehighway"),
            Self::Checkinferry => String::from("checkinferry"),
            Self::Checkoutferry => String::from("checkoutferry"),
            Self::Elevator => String::from("elevator"),
            Self::Elevatordown => String::from("elevatordown"),
            Self::Elevatorup => String::from("elevatorup"),
            Self::Escalator => String::from("escalator"),
            Self::Escalatordown => String::from("escalatordown"),
            Self::Escalatorup => String::from("escalatorup"),
            Self::Stairs => String::from("stairs"),
            Self::Stairsdown => String::from("stairsdown"),
            Self::Stairsup => String::from("stairsup"),
        }
    }
}

impl Default for LinkSegmentManeuver {
    fn default() -> LinkSegmentManeuver {
        Self::None
    }
}




