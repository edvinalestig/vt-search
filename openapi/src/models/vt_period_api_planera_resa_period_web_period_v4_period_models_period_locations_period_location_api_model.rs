/*
 * Planera Resa
 *
 * Sök och planera resor med Västtrafik
 *
 * The version of the OpenAPI document: v4
 * 
 * Generated by: https://openapi-generator.tech
 */

/// LocationsPeriodLocationApiModel : Information about a location.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct LocationsPeriodLocationApiModel {
    /// The 16-digit Västtrafik gid.
    #[serde(rename = "gid", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub gid: Option<Option<String>>,
    /// The location name.
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "locationType")]
    pub location_type: crate::models::LocationType,
    /// The WGS84 latitude of the location.
    #[serde(rename = "latitude", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub latitude: Option<Option<f64>>,
    /// The WGS84 longitude of the location.
    #[serde(rename = "longitude", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub longitude: Option<Option<f64>>,
    /// The location platform, only available for stop points.
    #[serde(rename = "platform", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub platform: Option<Option<String>>,
    /// The location straight line distance in meters.
    #[serde(rename = "straightLineDistanceInMeters", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub straight_line_distance_in_meters: Option<Option<i32>>,
    /// Is \"Närtrafik\" (Local Service) available for the location?  Values are only available for LocationType: StopArea, PointOfInterest and Address.  Values are only available for endpoint: locations/by-text.
    #[serde(rename = "hasLocalService", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub has_local_service: Option<Option<bool>>,
}

impl LocationsPeriodLocationApiModel {
    /// Information about a location.
    pub fn new(name: String, location_type: crate::models::LocationType) -> LocationsPeriodLocationApiModel {
        LocationsPeriodLocationApiModel {
            gid: None,
            name,
            location_type,
            latitude: None,
            longitude: None,
            platform: None,
            straight_line_distance_in_meters: None,
            has_local_service: None,
        }
    }
}


