/*
 * Planera Resa
 *
 * Sök och planera resor med Västtrafik
 *
 * The version of the OpenAPI document: v4
 * 
 * Generated by: https://openapi-generator.tech
 */

/// JourneyDetailsPeriodCallApiModel : Information about a call on the trip leg.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct JourneyDetailsPeriodCallApiModel {
    #[serde(rename = "stopPoint")]
    pub stop_point: Box<crate::models::JourneyDetailsPeriodStopPointApiModel>,
    /// The planned time of the call in RFC 3339 format.
    #[serde(rename = "plannedTime")]
    pub planned_time: String,
    /// The estimated time of the call in RFC 3339 format.
    #[serde(rename = "estimatedTime", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub estimated_time: Option<Option<String>>,
    /// The best known time of the call in RFC 3339 format. Is EstimatedTime if exists, otherwise PlannedTime.
    #[serde(rename = "estimatedOtherwisePlannedTime", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub estimated_otherwise_planned_time: Option<Option<String>>,
    /// An ordered list (most important first) of notes related to the call.
    #[serde(rename = "notes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub notes: Option<Option<Vec<crate::models::Note>>>,
}

impl JourneyDetailsPeriodCallApiModel {
    /// Information about a call on the trip leg.
    pub fn new(stop_point: crate::models::JourneyDetailsPeriodStopPointApiModel, planned_time: String) -> JourneyDetailsPeriodCallApiModel {
        JourneyDetailsPeriodCallApiModel {
            stop_point: Box::new(stop_point),
            planned_time,
            estimated_time: None,
            estimated_otherwise_planned_time: None,
            notes: None,
        }
    }
}


