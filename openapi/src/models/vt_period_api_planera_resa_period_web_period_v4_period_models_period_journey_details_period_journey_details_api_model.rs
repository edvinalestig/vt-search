/*
 * Planera Resa
 *
 * Sök och planera resor med Västtrafik
 *
 * The version of the OpenAPI document: v4
 * 
 * Generated by: https://openapi-generator.tech
 */

/// JourneyDetailsPeriodJourneyDetailsApiModel : Detailed information about a journey.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct JourneyDetailsPeriodJourneyDetailsApiModel {
    #[serde(rename = "departureAccessLink", skip_serializing_if = "Option::is_none")]
    pub departure_access_link: Option<Box<crate::models::JourneyDetailsPeriodDepartureAccessLinkApiModel>>,
    /// Detailed information, including stops, about the trip legs.
    #[serde(rename = "tripLegs", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub trip_legs: Option<Option<Vec<crate::models::JourneyDetailsPeriodTripLegDetailsApiModel>>>,
    /// A list of ConnectionLinks between TripLegs, when applicable. The internal order of TripLegs and ConnectionLinks is defined by Index-property on the objects.
    #[serde(rename = "connectionLinks", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub connection_links: Option<Option<Vec<crate::models::JourneyDetailsPeriodConnectionLinkApiModel>>>,
    #[serde(rename = "arrivalAccessLink", skip_serializing_if = "Option::is_none")]
    pub arrival_access_link: Option<Box<crate::models::JourneyDetailsPeriodArrivalAccessLinkApiModel>>,
    #[serde(rename = "destinationLink", skip_serializing_if = "Option::is_none")]
    pub destination_link: Option<Box<crate::models::JourneyDetailsPeriodDestinationLinkApiModel>>,
    #[serde(rename = "ticketSuggestionsResult", skip_serializing_if = "Option::is_none")]
    pub ticket_suggestions_result: Option<Box<crate::models::JourneyDetailsPeriodTicketSuggestionsResultApiModel>>,
    /// The tariff zones that the journey traverses.
    #[serde(rename = "tariffZones", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub tariff_zones: Option<Option<Vec<crate::models::JourneyDetailsPeriodTariffZoneApiModel>>>,
    #[serde(rename = "occupancy", skip_serializing_if = "Option::is_none")]
    pub occupancy: Option<Box<crate::models::OccupancyInformationApiModel>>,
}

impl JourneyDetailsPeriodJourneyDetailsApiModel {
    /// Detailed information about a journey.
    pub fn new() -> JourneyDetailsPeriodJourneyDetailsApiModel {
        JourneyDetailsPeriodJourneyDetailsApiModel {
            departure_access_link: None,
            trip_legs: None,
            connection_links: None,
            arrival_access_link: None,
            destination_link: None,
            ticket_suggestions_result: None,
            tariff_zones: None,
            occupancy: None,
        }
    }
}


