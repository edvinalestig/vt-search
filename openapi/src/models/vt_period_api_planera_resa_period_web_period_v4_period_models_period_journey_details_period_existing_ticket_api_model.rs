/*
 * Planera Resa
 *
 * Sök och planera resor med Västtrafik
 *
 * The version of the OpenAPI document: v4
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct JourneyDetailsPeriodExistingTicketApiModel {
    /// An Id for matching this existingTicket with ticketValidityApiModel in response.
    #[serde(rename = "id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub id: Option<Option<String>>,
    /// From TicketSuggestionApiModel
    #[serde(rename = "offerSpecification", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub offer_specification: Option<Option<String>>,
    /// Must be specified in RFC 3339 format
    #[serde(rename = "timeOfIssue", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub time_of_issue: Option<Option<String>>,
    /// Must be specified in RFC 3339 format
    #[serde(rename = "timeOfActivation", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub time_of_activation: Option<Option<String>>,
}

impl JourneyDetailsPeriodExistingTicketApiModel {
    pub fn new() -> JourneyDetailsPeriodExistingTicketApiModel {
        JourneyDetailsPeriodExistingTicketApiModel {
            id: None,
            offer_specification: None,
            time_of_issue: None,
            time_of_activation: None,
        }
    }
}


